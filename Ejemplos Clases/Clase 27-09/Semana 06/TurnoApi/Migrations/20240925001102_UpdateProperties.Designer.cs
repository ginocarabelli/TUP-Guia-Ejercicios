// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TurnoApi.Models;

#nullable disable

namespace TurnoApi.Migrations
{
    [DbContext(typeof(TurnosDbContext))]
    [Migration("20240925001102_UpdateProperties")]
    partial class UpdateProperties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TurnoApi.Models.TDetallesTurno", b =>
                {
                    b.Property<int>("IdTurno")
                        .HasColumnType("int")
                        .HasColumnName("id_turno");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int")
                        .HasColumnName("id_servicio");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("observaciones");

                    b.HasKey("IdTurno", "IdServicio");

                    b.ToTable("T_DETALLES_TURNO", (string)null);
                });

            modelBuilder.Entity("TurnoApi.Models.TServicio", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Costo")
                        .HasColumnType("int")
                        .HasColumnName("costo");

                    b.Property<string>("EnPromocion")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("enPromocion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("T_SERVICIOS", (string)null);
                });

            modelBuilder.Entity("TurnoApi.Models.TTurno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cliente")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cliente");

                    b.Property<string>("Fecha")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("fecha");

                    b.Property<DateTime?>("FechaCancelacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_cancelacion");

                    b.Property<string>("Hora")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("hora");

                    b.Property<string>("MotivoCancelacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("motivo_cancelacion");

                    b.HasKey("Id");

                    b.ToTable("T_TURNOS", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
